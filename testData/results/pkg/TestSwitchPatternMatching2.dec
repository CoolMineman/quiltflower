package pkg;

import java.lang.runtime.SwitchBootstraps;

public class TestSwitchPatternMatching2 {
   static void testTriangle(TestSwitchPatternMatching2.Shape s) {
      TestSwitchPatternMatching2.Shape var1 = s;// 5
      byte var2 = 0;

      while(true) {
         switch(SwitchBootstraps.typeSwitch<"typeSwitch",TestSwitchPatternMatching2.Triangle,TestSwitchPatternMatching2.Triangle>(var1, var2)) {
         case -1:
            System.out.println("null");// 11
            return;// 15
         case 0:
            TestSwitchPatternMatching2.Triangle t = (TestSwitchPatternMatching2.Triangle)var1;// 6
            if (!(t.calculateArea() > 100.0)) {
               var2 = 1;
               break;
            }

            System.out.println("Large triangle");// 7
            return;
         case 1:
            TestSwitchPatternMatching2.Triangle t = (TestSwitchPatternMatching2.Triangle)var1;// 8
            System.out.println("Small triangle");// 9
            return;
         default:
            System.out.println("Non-triangle");// 13
            return;
         }
      }
   }

   private abstract class Shape {
      abstract double calculateArea();
   }

   private class Triangle extends TestSwitchPatternMatching2.Shape {
      @Override
      double calculateArea() {
         return 0.0;// 25
      }
   }
}

class 'pkg/TestSwitchPatternMatching2' {
   method 'testTriangle (Lpkg/TestSwitchPatternMatching2$Shape;)V' {
      0      6
      1      6
      2      7
      3      7
      4      10
      5      10
      6      10
      7      10
      8      10
      9      10
      a      10
      b      10
      24      15
      25      15
      26      15
      27      15
      28      15
      29      16
      2a      16
      2b      16
      2c      16
      2d      16
      2e      16
      2f      16
      30      16
      31      16
      34      17
      35      17
      36      18
      39      21
      3a      21
      3b      21
      3c      21
      3d      21
      3e      21
      3f      21
      40      21
      44      24
      45      24
      46      24
      47      24
      48      24
      49      24
      4a      25
      4b      25
      4c      25
      4d      25
      4e      25
      4f      25
      50      25
      51      25
      55      12
      56      12
      57      12
      58      12
      59      12
      5a      12
      5b      12
      5c      12
      60      28
      61      28
      62      28
      63      28
      64      28
      65      28
      66      28
      67      28
      6b      13
   }
}

class 'pkg/TestSwitchPatternMatching2$Triangle' {
   method 'calculateArea ()D' {
      0      41
      1      41
   }
}

Lines mapping:
5 <-> 7
6 <-> 16
7 <-> 22
8 <-> 25
9 <-> 26
11 <-> 13
13 <-> 29
15 <-> 14
25 <-> 42
